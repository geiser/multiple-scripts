#!/bin/sh
# Script to backup data & database from Openshift Application
#   rhc-backup SSH_HOST APP_NAME <param=value> ...
# The optional parameters are:
# -d --dest: backup location (default .)
# --db-user: user to restore DB (default MySQL)
# --db-pass: password to restore DB (default MySQL)
# --data-dest: path to restore data
# --databases: backup and restore only these databases

SSH_HOST='geiser.gcc2@geiser.hopto.org'  #$1
#APP_NAME='' #$2
BACKUP_DIR=$(pwd)
DB_RESTORE=true # false
DATA_RESTORE=true # false
DATABASES="moodle"

#for i in "$@"; do
#    case $i in
#        -d=*|--dest=*)
#        BACKUP_DIR="${i#*=}"
#        shift
#        ;;
#        --db-user=*)
#        DB_RESTORE=true
        db_user="root"
#        shift
#        ;;
#        --db-pass=*)
#        DB_RESTORE=true
        db_pass="qaz123456"
#        shift
#        ;;
#        --data-dest=*)
#        DATA_RESTORE=true
        data_dest="/Users/gcc/mdl_data"
#        shift
#        ;;
#        --databases=*)
#        DATABASES="${i#*=}"
#        shift
#        ;;
#    esac
#done

now=$(date +"%Y%m%d-%s")
BACKUP_DIR=${BACKUP_DIR}

[ ! -d ${BACKUP_DIR} ] && mkdir -p ${BACKUP_DIR}
cd ${BACKUP_DIR}

# Backup data
ssh $SSH_HOST "cd /var/www/mdl_data ; tar -cpzf data-${now}.tar.gz --exclude=data-${now}.tar.gz ."
scp $SSH_HOST:/var/www/mdl_data/data-${now}.tar.gz .
ssh $SSH_HOST "rm /var/www/mdl_data/data-${now}.tar.gz"

# Backup databases
# TODO: Get all the environment variables in on shot
# scp $SSH_HOST:mysql/env/OPENSHIFT_MYSQL_DB_USERNAME .
# scp $SSH_HOST:mysql/env/OPENSHIFT_MYSQL_DB_PASSWORD .
# scp $SSH_HOST:.env/OPENSHIFT_MYSQL_DB_HOST .
# scp $SSH_HOST:.env/OPENSHIFT_MYSQL_DB_PORT .

os_dbuser="root" # $(cat OPENSHIFT_MYSQL_DB_USERNAME)
os_dbpass="qaz123456" # $(cat OPENSHIFT_MYSQL_DB_PASSWORD)
#os_dbhost=$(cat OPENSHIFT_MYSQL_DB_HOST)
#os_dbport=$(cat OPENSHIFT_MYSQL_DB_PORT)

dump_opt="-u ${os_dbuser} -p${os_dbpass}"
#dump_opt="${dump_opt} --host="${os_dbhost}" --port="${os_dbport}""
#dump_opt="${dump_opt} --complete-insert --skip-lock-tables"
#if [ "$DATABASES" = false ] ; then
#    dump_opt="${dump_opt} --all-databases"
#else
    dump_opt="${dump_opt} --databases ${DATABASES}"
#fi

ssh $SSH_HOST "mysqldump ${dump_opt} | gzip -9 > /home/geiser.gcc2/db-${now}.sql.gz"
scp $SSH_HOST:/home/geiser.gcc2/db-${now}.sql.gz .
ssh $SSH_HOST "rm -f /home/geiser.gcc2/db-${now}.sql.gz"

# Restore instantly data
if [ "$DATA_RESTORE" = true ] ; then
    [ ! -d ${data_dest} ] && mkdir -p ${data_dest}
    echo "Restoring data in ${data_dest} ..."
    tar zxf ${BACKUP_DIR}/data-${now}.tar.gz -C ${data_dest} --strip-components=1
fi

# Restore instantly sql
mysql_opt="-u ${db_user} -p${db_pass}"
if [ "$DB_RESTORE" = true ] ; then
    echo "Restoring database using ${db_user}@localhost ..."
    gunzip < ${BACKUP_DIR}/db-${now}.sql.gz | mysql ${mysql_opt}
fi

